##################################
#      DEVELOPMENT USE ONLY      #
# DO NOT USE THIS IN PRODUCTION! #
##################################
version: "3.7"
services:
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    container_name: elastic
    environment:
      - node.name=elastic
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - "ELASTIC_PASSWORD=natlas-dev-password-do-not-use"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - backend
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -u elastic:natlas-dev-password-do-not-use -s -X GET http://localhost:9200/_cluster/health?pretty | grep status | grep -q '\\(green\\|yellow\\)'"
        ]
      interval: 5s
      timeout: 10s
      retries: 24

  mysql:
    image: mysql:8.0.21
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=natlas-dev-password-do-not-use
      - MYSQL_DATABASE=natlas
    networks:
      - backend

  zipkin-server:
    image: openzipkin/zipkin-slim:3.1.0
    ports:
      - 9411:9411
    networks:
      - backend

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    ports:
      - 4317:4317
      - 55679:55679
    volumes:
      - ./.otel-collector-dev.yml:/etc/otelcol/config.yaml
    networks:
      - backend

  webpack-server:
    image: node:20-bookworm
    command: /bin/bash -c '/usr/local/bin/yarn install && /usr/local/bin/yarn run webpack --mode development --watch'
    networks:
      - backend
    volumes:
      - ./natlas-server:/app
      - node_modules:/app/node_modules
      - html_assets:/app/static/dist
    working_dir: /app

  natlas-server:
    build: natlas-server
    command: flask run --host 0.0.0.0
    ports:
      - 5000:5000
    networks:
      - backend
    environment:
      - ELASTICSEARCH_URL=http://elastic:9200
      - ELASTIC_AUTH_ENABLE=True
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=natlas-dev-password-do-not-use
      - FLASK_ENV=development
      - OTEL_ENABLE=True
      - OTEL_COLLECTOR=otel-collector:4317
      - DB_AUTO_UPGRADE=True
    volumes:
      - ns-data:/data
      - ./natlas-server:/opt/natlas/natlas-server
      - html_assets:/opt/natlas/natlas-server/static/dist
    links:
      - elastic
    depends_on:
      elastic:
        condition: service_healthy


  natlas-agent:
    build: natlas-agent
    networks:
      - backend
    environment:
      - NATLAS_SERVER_ADDRESS=http://natlas-server:5000
      - NATLAS_SCAN_LOCAL=true
    cap_add:
      - NET_ADMIN
    security_opt:
      - seccomp=./natlas-agent/chrome.json
    volumes:
      - ./natlas-agent:/opt/natlas/natlas-agent
    links:
      - natlas-server

networks:
  backend:

volumes:
  ns-data:
  elastic:
  node_modules:
  html_assets:
