swagger: "2.0"
info:
  version: "1"
  title: Natlas Agent API
  description:
    "All of the API endpoints that natlas agents talk to during regular usage"
host: natlas.io
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
securityDefinitions:
  Agent:
    type: apiKey
    description: 'bearer {agent_id}:{auth_token}'
    in: header
    name: Authorization
paths:
  /natlas-services:
    get:
      operationId: getServices
      produces:
      - application/json
      security:
        - Agent: []
      description:
        "Returns the latest version of all services for nmap to scan for"
      responses:
        '200':
          description:
            "The list of natlas services to use for the client"
          schema:
            $ref: '#/definitions/NatlasServices'

        '403':
          description:
            "Not authorized. Please provide a valid agent token"
          schema:
            $ref: '#/definitions/GenericResponse'
  /getwork:
    get:
      operationId: getWork
      produces:
      - application/json
      parameters:
      - in: query
        type: string
        name: target
      security:
        - Agent: []
      responses:
        '200':
          description: Get a job
          schema:
            $ref: '#/definitions/ScanAssignment'
        '403':
          description:
           "Not authorized. Please provide a valid agent token"
          schema:
            $ref: '#/definitions/GenericResponse'
  /submit:
    post:
      operationId: submitScanResult
      produces:
      - application/json
      security:
        - Agent: []
      parameters:
      - in: body
        name: result
        schema:
          $ref: '#/definitions/ScanResult'
      responses:
        '200':
          description:
            "The server was able to parse the response and handled it accordingly."
          schema:
            $ref: '#/definitions/GenericResponse'
        '403':
          description:
            "Not authorized. Please provide a valid agent token"
          schema:
            $ref: '#/definitions/GenericResponse'
  /status:
    get:
      operationId: status
      produces:
      - application/json
      responses:
        '200':
          description:
            "The server was able to parse the request and handled it accordingly."
          schema:
            $ref: '#/definitions/StatusResponse'
definitions:
  NatlasServices:
    type: object
    properties:
      id:
        type: integer
        example: 1
      sha256:
        type: string
        description:
          "Sha256 of the natlas-services file contents"
        example:
          "9b1ecb78562746ceea9d7122d6f2624b6bb09f3d27da2731ede545ef301d4126"
      services:
        type: string
        description:
          "A text blob of newline separated services for natlas to scan for. This is fed directly into nmap via the --servicedb parameter."
        example:
          "http\t80/tcp\ntelnet\t23/tcp\nhttps\t443/tcp\nftp\t21/tcp\nssh\t22/tcp\nsmtp\t25/tcp\n"
  ScanResult:
    type: object
    properties:
      scan_id:
        type: string
        description:
          "The scan id given to the agent identify this scan"
      ip:
        type: string
        description:
          "The ip address that was scanned"
      tags:
        type: array
        description:
          "The tags that apply the scanned ip address"
        items:
          type: string
      scan_reason:
        type: string
        description:
          "The reason for performing this scan."
        enum: ["automatic", "manual", "requested"]
      xml_data:
        type: string
        description:
          "The .xml output from nmap"
      nmap_data:
        type: string
        description:
          "The .nmap output from nmap"
      gnmap_data:
        type: string
        description:
          "The .gnmap output from nmap"
      scan_start:
        type: string
        description:
          "Timestamp when the agent started its scan"
      scan_stop:
        type: string
        description:
          "Timestamp when the agent stopped its scan"
      is_up:
        type: boolean
        description:
          "Whether the host was determined to be up or down"
      port_count:
        type: integer
        description:
          "Number of ports found if the host is up"
      timed_out:
        type: boolean
        description:
          "True if the nmap process timed out"
      screenshots:
        type: array
        description:
          "Array of screenshot objects representing all the screenshots taken against a host"
        items:
          type: object
          properties:
            host:
              type: string
            port:
              type: integer
            service:
              type: string
            data:
              type: string
    required:
      - scan_id
      - ip
      - scan_reason
      - xml_data
      - nmap_data
      - gnmap_data
      - scan_start
      - scan_stop
  ScanAssignment:
    type: object
    properties:
      scan_id:
        type: string
        example: "7v8emfj4ux2vutmn"
        description:
          "A randomly generated identifier for the agent to store work on disk temporarily"
      scan_reason:
        type: string
        description:
          "The reason for performing this scan."
        enum: ["automatic", "manual", "requested"]
      target:
        type: string
        description:
          "The target IP address to scan"
        example: 127.34.23.56
      tags:
        type: array
        description:
          "A list of tags for the result to be tagged with"
        items:
          type: string
        example:
        - corpnet-a
        - marketing
      agent_config:
        type: object
        properties:
          versionDetection:
            type: boolean
            description:
              "Tell nmap to attempt version detection (-sV)"
            default: true
          osDetection:
            type: boolean
            description:
              "Tell nmap to attempt OS detection (-O)"
            default: true
          enableScripts:
            type: boolean
            description:
              "Tell nmap to use it's scripting engine (--script). Loads all 'scripts'"
            default: true
          onlyOpens:
            type: boolean
            description:
              "Tell nmap to only report open ports (--open)"
            default: true
          scanTimeout:
            type: integer
            description:
              "Kill nmap if it takes more than this many seconds"
            minimum: 0
            default: 660
            example: 660
          webScreenshots:
            type: boolean
            description:
              "Attempt to take screenshots of web servers"
            default: true
          vncScreenshots:
            type: boolean
            description:
              "Attempt to take screenshots of vnc servers"
            default: true
          webScreenshotTimeout:
            type: integer
            description:
              "Kill web screenshot process if it takes more than this many seconds"
            default: 60
            example: 60
          vncScreenshotTimeout:
            type: integer
            description:
              "Kill vnc process if it takes more than this many seconds"
            default: 60
            example: 60
          scriptTimeout:
            type: integer
            description:
              "Nmap script timeout (--script-timeout) in seconds"
            minimum: 0
            default: 60
            example: 60
          hostTimeout:
            type: integer
            description:
              "Nmap host timeout (--host-timeout) in seconds"
            minimum: 0
            default: 600
            example: 600
          osScanLimit:
            type: boolean
            description:
              "Limit attempts to identify OS (--osscan-limit)"
            default: true
          noPing:
            type: boolean
            description:
              "Tell nmap to ignore host discovery (-Pn)"
            default: false
          udpScan:
            type: boolean
            description:
              "Tell nmap to do UDP scan in addition to TCP SYN (-sSU)"
            default: false
          scripts:
            type: string
            description:
              "The list of scripts to run if enableScripts is true"
            example: "default, ssh-auth-methods"
            default: "default"
  GenericResponse:
    type: object
    properties:
      status:
        type: integer
        minimum: 200
        example: 403
        maximum: 599
        description:
          "An HTTP Status code"
      message:
        type: string
        description:
          "A human friendly error message"
        example: "Can't not frobinate the foobar"
      retry:
        type: boolean
        description:
          "If true, retry the request, otherwise do not"
        default: false
    required:
    - status
    - message
  StatusResponse:
    type: object
    properties:
      completed_cycles:
        type: integer
        minimum: 0
        example: 4
        description:
          "The number of scan cycles natlas has completed since it was last started"
      cycle_start_time:
        type: string
        nullable: true
        format: date-time
        description:
          "The timestamp at which the current scan cycle started"
        example: "Tue, 10 Mar 2020 02:01:26 GMT"
      effective_scope_size:
        type: integer
        minimum: 0
        example: 16
        description:
          "Effective Scope Size is a measure of the number of unique IP addresses in scope, excluding any IP addresses that appear in the blacklist"
      natlas_start_time:
        type: string
        format: date-time
        description:
          "The timestamp at which the natlas server was started"
        example: "Tue, 10 Mar 2020 02:01:16 GMT"
      scans_this_cycle:
        type: integer
        minimum: 0
        example: 13
        description:
          "The number of scans that have been submitted with a scan_start time newer than cycle_start_time"
      avg_cycle_duration:
        type: string
        nullable: true
        example: "13d, 14h, 15m, 16s"
        description:
          "A human readable string measuring the average duration per completed scan cycle"
