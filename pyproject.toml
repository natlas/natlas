[dependency-groups]
agent = [
  "natlas-libnmap~=0.7",
  "pillow~=11.0",
  "pydantic-settings~=2.7",
  "pydantic~=2.10",
  "python-dotenv~=1.0",
  "requests~=2.31",
  "sentry-sdk~=1.40"
]
dev = [
  "django-stubs[compatible-mypy]>=5.1.3",
  "mypy~=1.14"
]
server = [
  "cyclicprng~=0.2",
  "django-allauth[mfa]~=65.4",
  "django-anymail>=12.0",
  "django-debug-toolbar~=4.2",
  "django-extensions~=3.2",
  "django-widget-tweaks~=1.5",
  "django~=5.1",
  "elasticsearch~=7.17",
  "email-validator~=2.2",
  "flask-login~=0.6",
  "flask-mail~=0.10",
  "flask-migrate~=4.0",
  "flask-sqlalchemy~=3.1",
  "flask-wtf~=1.2",
  "gunicorn~=23.0",
  "minio~=7.2",
  "natlas-libnmap~=0.7",
  "netaddr~=0.8",
  "opentelemetry-exporter-otlp~=1.23",
  "opentelemetry-instrumentation-flask~=0.50b0",
  "opentelemetry-sdk~=1.23",
  "pillow~=11.0",
  "psycopg[binary,pool]~=3.2",
  "pydantic-settings~=2.7",
  "pydantic~=2.10",
  "pyjwt~=2.0",
  "python-dateutil~=2.9",
  "semver~=2.13",
  "sentry-sdk~=1.14",
  "sympy~=1.8",
  "webpack-manifest~=2.1"
]

[project]
name = "natlas"
requires-python = ">=3.12"
version = "0.6.12"

[tool.django-stubs]
django_settings_module = "natlas.settings"

[tool.mypy]
disable_error_code = [
  "import-untyped",
  "no-untyped-call"
]
enable_error_code = [
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable"
]
exclude = [
  '**/migrations/versions/.*\.py$'
]
files = "."
local_partial_types = true
mypy_path = "mypy_stubs"
no_implicit_reexport = true
plugins = ["mypy_django_plugin.main", "pydantic.mypy"]
pretty = false
strict = true
strict_optional = true
warn_unreachable = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]

[tool.ruff.lint]
ignore = [
  "PLC0414",
  "PLR0911",
  "PLR0912",
  "PLR0915",
  "PLR2004"
]
select = [
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # pyflakes
  "F",
  # flynt
  "FLY",
  # isort
  "I",
  # pylint
  "PL",
  # flake8-return
  "RET",
  # Ruff's own rules
  "RUF",
  # flake8-simplify
  "SIM",
  # flake8-tidy-imports
  "TID",
  # pyupgrade
  "UP"
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"server/**/migrations/*.py" = ["RUF012"]

[tool.uv]
default-groups = ["agent", "dev", "server"]
