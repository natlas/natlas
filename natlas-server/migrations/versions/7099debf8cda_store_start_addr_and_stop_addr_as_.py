"""Store start addr and stop addr as varbinary

Revision ID: 7099debf8cda
Revises: 6eb79ba67acb
Create Date: 2020-08-27 20:50:09.379922

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.ext.declarative import declarative_base
from netaddr import IPNetwork

# revision identifiers, used by Alembic.
revision = "7099debf8cda"
down_revision = "6eb79ba67acb"
branch_labels = None
depends_on = None

Base = declarative_base()


class ScopeItem(Base):
    __tablename__ = "scope_item"
    id = sa.Column(sa.Integer, primary_key=True)
    target = sa.Column(sa.String(length=128))
    addr_family = sa.Column(sa.Integer)
    start_addr = sa.Column(sa.VARBINARY(length=16))
    stop_addr = sa.Column(sa.VARBINARY(length=16))

    def parse_network_range(self, network: str):
        net = IPNetwork(network)
        self.addr_family = net.version
        size = 4 if net.version == 4 else 16
        self.start_addr = net.first.to_bytes(size, byteorder="big")
        self.stop_addr = net.last.to_bytes(size, byteorder="big")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("scope_item", schema=None) as batch_op:
        batch_op.add_column(sa.Column("addr_family", sa.Integer(), nullable=True))
        batch_op.add_column(
            sa.Column("start_addr", sa.VARBINARY(length=16), nullable=True)
        )
        batch_op.add_column(
            sa.Column("stop_addr", sa.VARBINARY(length=16), nullable=True)
        )

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    for item in session.query(ScopeItem):
        net = IPNetwork(item.target)
        size = 4 if net.version == 4 else 16
        item.addr_family = net.version
        item.start_addr = net.first.to_bytes(size, byteorder="big")
        item.stop_addr = net.last.to_bytes(size, byteorder="big")
    session.commit()

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("scope_item", schema=None) as batch_op:
        batch_op.drop_column("stop_addr")
        batch_op.drop_column("start_addr")
        batch_op.drop_column("addr_family")

    # ### end Alembic commands ###
